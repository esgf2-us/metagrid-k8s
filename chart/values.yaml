# -- Type of authentication to use, possible choices are globus (deafult), and keycloak
authType: globus

globus:
  redirect: https://localhost:3000/cart/items
  # -- Client ID for a globus thick client, the redirect will need to be the url of the frontend e.g. https://metagrid.io/metagrid
  frontend:
    clientID: client_id
  # -- Client ID/Secret for globus portal, the redirect will need to be the url of the backend e.g. https://metagrid.io/metagrid-backend/complete/globus/
  backend:
    clientID: client_id
    clientSecret: client_secret
  nodes:
    - aims3.llnl.gov
    - esgf-data1.llnl.gov
    - esgf-data2.llnl.gov

keyCloak:
  # -- Keycloak service url
  url: http://127.0.0.1:8080
  # -- Client realm
  realm: metagrid
  # -- Client ID
  clientID: client_id

# -- ESGF wget service url
wgetApiUrl: https://esgf-node.llnl.gov/esg-search/wget

# -- ESGF search service url
searchUrl: https://esgf-node.llnl.gov/esg-search/search

# -- ESGF node status url
esgfNodeStatusUrl: https://nimbus-dev.llnl.gov/metagrid-backend/proxy/status

# -- (Deprecated) ESGF solr url
solrUrl: https://esgf-node.llnl.gov/solr

# -- Base url for use when using an external TLS termination e.g. https://metagrid.io
baseUrl:

# -- Customize projects loaded during the initial migration, this is the value stored in [initial_projects_data.py](https://github.com/aims-group/metagrid/blob/master/backend/metagrid/initial_projects_data.py)
projects:
# Example projects
#
# projects: |
#   group_descriptions = {
#     "General": "Least verbose, typically returns many results",
#   }
#   projects = [
#     {
#       "name": "Example",
#       "full_name": "Example project",
#       ...
#       "facets_by_group": {
#         "General": ["activity_id", "data_node"],
#       }
#     }
#   ]

# -- List of secrets used to pull images from private registries
imagePullSecrets: []

react:
  # -- Hotjar configuration
  hotjarID:
  hotjarSV:

  # -- Google analytics ID
  googleAnalyticsID:

  # -- Custom url for external metagrid backend
  backendUrl:

  # -- Frontend path prefix
  urlPath: /metagrid

  previousUrlPath:

  # -- Number of replicas
  replicaCount: 1

  image:
    # -- React container URI
    repository: ghcr.io/esgf2-us/metagrid-frontend
    # -- Container pull policy
    pullPolicy: Always
    # -- Container tag
    tag:

  nameOverride: ""
  fullnameOverride: ""

  # -- Extra labels
  labels: {}

  # -- Extra annotations
  annotations: {}

  # -- Extra pod annotations
  podAnnotations: {}

  # -- [Affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity), pod node scheduling constraints
  affinity: {}

  # -- Container [resources](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers)
  resources: {}

  # -- Container [security](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container) context
  securityContext: {}

  # -- Node [selector](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector) labels
  nodeSelector: {}

  # -- Pod [preemption](https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/#preemption) policy
  preemptionPolicy:

  # -- Pod scheduling [priority](https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/#pod-priority)
  priority:

  # -- Pod scheduling [priority](https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/#priorityclass) class name
  priorityClassName:

  # -- Pod [security](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod) context
  podSecurityContext: {}

  # -- Pod [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration)
  tolerations: []

  # -- Horizontal Pod autoscaling configuration
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  # -- React service
  service:
    # -- Service type
    type: ClusterIP
    # -- Service port
    port: 3000

  # -- Prometheus monitoring
  monitoring:
    enabled: false

django:
  # -- Django [secret](https://docs.djangoproject.com/en/5.0/ref/settings/#std-setting-SECRET_KEY) key
  secretKey:
  # -- Path for the admin panel
  adminUrl: panel/
  # -- Enable django debugging
  debug: false
  # -- (list) Custom gunicorn CLI arguments
  gunicornCmdArgs:

  # -- Backend path prefix
  urlPath: metagrid-backend

  # -- Frontend path to redirect to on login
  loginRedirect: search
  # -- Frontend path to redirect to on logout
  logoutRedirect: search

  admin:
    # -- Enable creating initial admin user
    create: false
    # -- Admin username
    username: admin
    # -- Admin password
    password:
    # -- Admin email
    email:

  migrateJob:
    # -- Enable migrate database job
    enabled: true

    # -- (int) Backoff limit for migrate job
    backoffLimit:

    # -- Restart policy for migrate job
    restartPolicy: Never

  # -- Number of replicas
  replicaCount: 1

  image:
    # -- Django container URI
    repository: ghcr.io/esgf2-us/metagrid-backend
    # -- Image pull policy
    pullPolicy: Always
    # -- Container tag
    tag:

  nameOverride: ""
  fullnameOverride: ""

  # -- Extra labels
  labels: {}

  # -- Extra annotations
  annotations: {}

  # -- Extra pod annotations
  podAnnotations: {}

  # -- [Affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity), pod node scheduling constraints
  affinity: {}

  # -- Container [resources](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers)
  resources: {}

  # -- Container [security](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container) context
  securityContext: {}

  # -- Node [selector](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector) labels
  nodeSelector: {}

  # -- Pod [preemption](https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/#preemption) policy
  preemptionPolicy:

  # -- Pod scheduling [priority](https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/#pod-priority)
  priority:

  # -- Pod scheduling [priority](https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/#priorityclass) class name
  priorityClassName:

  # -- Pod [security](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod) context
  podSecurityContext: {}

  # -- Pod [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration)
  tolerations: []

  # -- Horizontal pod autoscaling configuration
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  # -- Django service
  service:
    # -- Service type
    type: ClusterIP
    # -- Service port
    port: 5000

ingress:
  # -- Enable ingress
  enabled: false
  # -- Extra ingress annotations
  annotations: {}
  # -- Extra ingress labels
  labels: {}
  # -- Override ingress class
  className:

  # -- React ingress endpoint
  react:
    # -- Endpoint host
    host:

  # -- Django ingress endpoint
  django:
    # -- Endpoint host
    host:

  tls:
    enabled: false

    secretName:

# -- Postgresql database, **REQUIRED**
postgresql:
  enabled: true

  # -- Enabled persistence
  persistence:
    enabled: false

  postgresql:
    replicaCount: 1
    podSecurityContext:
      enabled: false
    containerSecurityContext:
      enabled: false
    # -- Postgresql password, should replace the default with something more secure
    password: pgpass
    # -- Postgresql replication manager password, should replace the default with something more secure
    repmgrPassword: repmgrpass

  pgpool:
    podSecurityContext:
      enabled: false
    containerSecurityContext:
      enabled: false
    # -- Postgresql Pgpool admin password, should replace the default with something more secure
    adminPassword: pgpooladminpass

# -- Extra manifests
extraManifests: {}
